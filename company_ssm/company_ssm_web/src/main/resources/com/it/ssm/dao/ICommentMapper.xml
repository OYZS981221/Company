<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.ssm.dao.ICommentDao">
    <resultMap id="BaseResultMap" type="com.it.ssm.domain.Comment">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="userID" jdbcType="INTEGER" property="userID"/>
        <result column="companyID" jdbcType="INTEGER" property="companyID"/>
        <result column="newsID" jdbcType="INTEGER" property="newsID"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>

        <association property="user" javaType="com.it.ssm.domain.User">
            <id column="id" property="id"/>
            <result column="username" property="userName"/>
        </association>

        <association property="company" javaType="com.it.ssm.domain.Company">
            <id column="id" property="id"/>
            <result column="companyid" property="companyID"/>
            <result column="name" property="name"/>
            <result column="type" property="type"/>
            <result column="address" property="address"/>
            <result column="phoneNumber" property="phoneNumber"/>
            <result column="popularity" property="popularity"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
      id,userID,companyID,newsID,comment,time
    </sql>

    <select id="selectFuzzy" parameterType="com.it.ssm.domain.Comment" resultMap="BaseResultMap">
        SELECT
        co.ID as ID,
        co.comment as comment,
        co.time as time,
        u.username as username,
        c.name as name,
        c.type as type
        from comment co
        left join company c on co.companyID = c.id
        left join user u on co.userID = u.id
        <where>
            <if test="keyWords !=null and keyWords !=''">
                concat (co.ID,comment,username,name,type) like "%"#{keyWords}"%"
            </if>
            <if test="beginTime != null and beginTime !=''
            and endTime != null and endTime !=''">
                and time between #{beginTime} and #{endTime}
            </if>
            <if test="userName!=null and userName!=''">
                and username=#{userName}
            </if>
            <if test="companyName!=null and companyName!=''">
                and name=#{companyName}
            </if>
        </where>
    </select>

    <select id="selectFuzzyU" parameterType="com.it.ssm.domain.Comment" resultMap="BaseResultMap">
        SELECT
        co.ID as ID,
        co.comment as comment,
        co.time as time,
        c.name as name,
        c.type as type
        from comment co
        left join company c on co.companyID = c.id
        left join user u on co.userID = u.id
        <where>
            <if test="keyWords !=null and keyWords !=''">
                concat (co.ID,comment,username,name,type) like "%"#{keyWords}"%"
            </if>
            <if test="beginTime != null and beginTime !=''
            and endTime != null and endTime !=''">
                and co.time between #{beginTime} and #{endTime}
            </if>
            <if test="userID!=null and userID!=''">
                and userID=#{userID}
            </if>
            <if test="companyName!=null and companyName!=''">
                and name=#{companyName}
            </if>
        </where>
    </select>
    <select id="getAll" resultMap="BaseResultMap" parameterType="com.it.ssm.domain.Comment">
        SELECT
        co.ID as ID,
        co.comment as comment,
        co.time as time,
        u.username as username,
        c.name as name,
        c.type as type
        from comment co
        left join company c on co.companyID = c.id
        left join user u on co.userID = u.id
    </select>
    <select id="getByCompanyID" resultMap="BaseResultMap" parameterType="com.it.ssm.domain.Comment">
        SELECT
        co.ID as ID,
        co.comment as comment,
        co.time as time,
        u.username as username
        from comment co
        left join company c on co.companyID = c.id
        left join user u on co.userID = u.id
    </select>

    <select id="getByID" resultMap="BaseResultMap" parameterType="com.it.ssm.domain.Comment">
        SELECT
        co.ID as ID,
        co.comment as comment,
        co.time as time,
        c.name as name,
        c.type as type,
        u.username as username
        from comment co
        left join company c on co.companyID = c.id
        left join user u on co.userID = u.id
    </select>

    <insert id="insertComment" parameterType="com.it.ssm.domain.Comment">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userID != null and userID!=''">
                userID,
            </if>
            <if test="companyID != null and companyID!=''">
                companyID,
            </if>
            <if test="newsID != null and newsID!=''">
                newsID,
            </if>
            <if test="comment != null and comment!=''">
                comment,
            </if>
            <if test="time != null">
                time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userID != null and userID!=''">
                #{userID},
            </if>
            <if test="companyID != null and companyID!=''">
                #{companyID},
            </if>
            <if test="newsID != null and newsID!=''">
                #{newsID},
            </if>
            <if test="comment != null and comment!=''">
                #{comment},
            </if>
            <if test="time != null">
                #{time},
            </if>


        </trim>
    </insert>


    <!--    删除企业档案 -->
    <delete id="deleteByID" parameterType="java.lang.Integer">
        delete from comment where id = #{id}
    </delete>
    <!-- 批量删除用户 -->
    <delete id="deleteList">
        delete from comment where id in
        <foreach collection="array" item="ids" open="(" separator=","
                 close=")">
            #{ids}
        </foreach>
    </delete>
</mapper>